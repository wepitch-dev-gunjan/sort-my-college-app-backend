# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/


    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # - run: npm install -g forever
    - name: Stop previous server processes
      run: |
        forever stopall || echo "No running server process found"
    - run: |
        cd api-gateway
        touch .env
        echo "${{ secrets.API_GATEWAY_SECRETS }}" > .env
        npm i
        # npm i axios
        forever start server.js
    # - run: |
    #     cd admin
    #     touch .env
    #     echo "${{ secrets.ADMIN_SECRETS }}" > .env
    #     npm i
    #     npm i axios
    #     forever start server.js
    # - run: |
    #     cd counselor
    #     touch .env
    #     echo "${{ secrets.COUNSELLOR_SECRETS }}" > .env
    #     npm i
    #     forever start server.js
    # - run: |
    #     cd notification-service
    #     touch .env
    #     echo "${{ secrets.NOTIFICATION_SERVICE_SECRETS }}" > .env
    #     npm i
    #     forever start server.js
    # - run: |
    #     cd user
    #     touch .env
    #     echo "${{ secrets.USER_SECRETS }}" > .env
    #     npm i
    #     forever start server.js
    # - run: |
    #     cd webinar
    #     touch .env
    #     echo "${{ secrets.WEBINAR_SECRETS }}" > .env
    #     npm i
    #     forever start server.js
